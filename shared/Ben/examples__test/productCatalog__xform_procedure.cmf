<?xml version="1.1" encoding="UTF-8"?>
<metadata name="productCatalog_xform" path="/shared/Ben/examples_test/productCatalog_xform" type="PROCEDURE" subtype="TRANSFORM_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="outputs" direction="OUT" nullable="false">
      <datatype name="outputs" type="TABLE" refId="1">
        <element name="ProductID">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="ProductName">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="CategoryID">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="CategoryName">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="ProductDescription">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="SerialNumber">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="UnitPrice">
          <datatype name="DECIMAL" type="DECIMAL" maxDigits="32" maxFractionalDigits="6"/>
        </element>
        <element name="ReorderLevel">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="LeadTime">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/Ben/examples_test/ds_XML/productCatalog.xml" type="TREE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1398448186761</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="lastModifiedDate" type="LONG">1516701387161</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="transformModel" type="BYTE_ARRAY">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
AAAAAQABAC8AAABpHQAAACE=</attribute>
  <attribute name="transformSource" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace xquery =  &quot;http://compositesw.com/transform/xquery&quot;;
declare namespace sql =  &quot;http://compositesw.com/transform/sql&quot;;
declare namespace ext2 =  &quot;http://www.compositesw.com/extensions2&quot;;
declare namespace xs =  &quot;http://www.w3.org/2001/XMLSchema&quot;;
declare namespace custom =  &quot;http://compositesw.com/transform/custom&quot;;

declare function local:productCatalog_xml( )
{
  (:invoke resource /shared/Ben/examples_test/ds_XML/&quot;&quot;productCatalog.xml&quot;&quot; :)
  let $var4 := doc(&quot;/shared/Ben/examples_test/ds_XML/&quot;&quot;productCatalog.xml&quot;&quot;&quot;)/catalog
  return
    $var4
};

declare function local:cast2( $ProductName)
{
  fn:substring($ProductName, 0 ,32769)
};

declare function local:cast( $CategoryName)
{
  fn:substring($CategoryName, 0 ,32769)
};

declare function local:cast3( $ProductDescription)
{
  fn:substring($ProductDescription, 0 ,32769)
};

declare function local:cast4( $SerialNumber)
{
  fn:substring($SerialNumber, 0 ,32769)
};

declare function local:cast5( $LeadTime)
{
  fn:substring($LeadTime, 0 ,32769)
};

let $nodes := 
(
  let $var4:= local:productCatalog_xml()
  return
  (
    for $var0 at $counter1 in $var4/category
    return 
      if (fn:not($counter1 &lt;= 2147483647 and fn:true()))
      then ()
      else 
        for $var3 at $counter2 in $var0/products/product
        return 
          if (fn:not($counter2 &lt;= 2147483647 and fn:true()))
          then ()
          else 
            element outputs
            {
              (
                element ProductID
                {
                  if (fn:string-length(fn:string($var3/ProductID)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/ProductID/text()
                }
                ,
                let $var8 := $var3/ProductName/text()
                let $var7:= local:cast2(fn:data($var8))
                return
                element ProductName
                {
                  if (fn:string-length(fn:string($var7)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var7
                }
                ,
                element CategoryID
                {
                  if (fn:string-length(fn:string($var0/CategoryID)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/CategoryID/text()
                }
                ,
                let $var12 := $var0/CategoryName/text()
                let $var11:= local:cast(fn:data($var12))
                return
                element CategoryName
                {
                  if (fn:string-length(fn:string($var11)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var11
                }
                ,
                let $var15 := $var3/ProductDescription/text()
                let $var14:= local:cast3(fn:data($var15))
                return
                element ProductDescription
                {
                  if (fn:string-length(fn:string($var14)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var14
                }
                ,
                let $var18 := $var3/SerialNumber/text()
                let $var17:= local:cast4(fn:data($var18))
                return
                element SerialNumber
                {
                  if (fn:string-length(fn:string($var17)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var17
                }
                ,
                element UnitPrice
                {
                  if (fn:string-length(fn:string($var3/UnitPrice)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/UnitPrice/text()
                }
                ,
                element ReorderLevel
                {
                  if (fn:string-length(fn:string($var3/ReorderLevel)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/ReorderLevel/text()
                }
                ,
                let $var23 := $var3/LeadTime/text()
                let $var22:= local:cast5(fn:data($var23))
                return
                element LeadTime
                {
                  if (fn:string-length(fn:string($var22)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var22
                }
              )
            }
    ,
    let $counter := count($var4/category/products/product)
    return
      if ($counter &gt;= 0) then
      ()
      else 
        for $k in (1 to ( 0 - $counter))
        return
          element outputs
          {
            (
              element ProductID
              {
              }
              ,
              element ProductName
              {
              }
              ,
              element CategoryID
              {
              }
              ,
              element CategoryName
              {
              }
              ,
              element ProductDescription
              {
              }
              ,
              element SerialNumber
              {
              }
              ,
              element UnitPrice
              {
              }
              ,
              element ReorderLevel
              {
              }
              ,
              element LeadTime
              {
              }
            )
          }
  )
)
return
$nodes</attribute>
</metadata>